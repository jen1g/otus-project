---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-deployment
  labels:
    app: {{ .Release.Name }}-deployment
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app:  {{ .Release.Name }}
    spec:
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      containers:
        - image: {{ .Values.container.image }}:{{ .Values.container.tag }}
          name:  {{ .Release.Name }}-app
          imagePullPolicy: Always
          ports:
            - containerPort: {{ .Values.container.port }}
          env:
            - name: SPRING_CONFIG_LOCATION
              value: /config/application.yaml
            - name: SPRING_DATASOURCE_URL
              valueFrom:
                secretKeyRef:
                  name: db-secret-payment
                  key: SPRING_DATASOURCE_URL
            - name: SPRING_DATASOURCE_USERNAME
              valueFrom:
                secretKeyRef:
                  name: db-secret-payment
                  key: SPRING_DATASOURCE_USERNAME
            - name: SPRING_DATASOURCE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: db-secret-payment
                  key: SPRING_DATASOURCE_PASSWORD
          livenessProbe:
            httpGet:
              path: /actuator/health/liveness
              port: {{ .Values.container.port }}
            initialDelaySeconds: 50
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /actuator/health/readiness
              port: {{ .Values.container.port }}
            initialDelaySeconds: 50
            periodSeconds: 5
          volumeMounts:
            - name: config-volume
              mountPath: /config/application.yaml
              subPath: application.yaml
      volumes:
        - name: config-volume
          configMap:
            name: {{ .Release.Name }}-config
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-service
  labels:
    app: {{ .Release.Name }}-service
spec:
  selector:
    app: {{ .Release.Name }}
  ports:
    - name: metrics
      port: 80
      targetPort: {{ .Values.container.port }}
  type: ClusterIP